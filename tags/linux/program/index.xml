<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux/Program on 梦还在吗</title>
    <link>http://example.org/tags/linux/program/</link>
    <description>Recent content in Linux/Program on 梦还在吗</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/tags/linux/program/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>awk</title>
      <link>http://example.org/posts/awk/</link>
      <pubDate>Fri, 08 May 2020 12:10:46 +0000</pubDate>
      
      <guid>http://example.org/posts/awk/</guid>
      <description>awk 介绍  AWK是一种优良的文本处理工具，Linux 及 Unix 环境中现有的功能最强大的数据处理引擎之一.其名称得自于它的创始人 Alfred Aho（阿尔佛雷德·艾侯）、Peter Jay Weinberger（彼得·温伯格）和 Brian Wilson Kernighan（布莱恩·柯林汉)姓氏的首个字母.AWK 程序设计语言，三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。最简单地说，AWK 是一种用于处理文本的编程语言工具。
 在大多数 linux 发行版上面，实际我们使用的是 gawk（GNU awk，awk 的 GNU 版本），在我们的环境中 ubuntu 上，默认提供的是 mawk，不过我们通常可以直接使用 awk 命令（awk 语言的解释器），因为系统已经为我们创建好了 awk 指向 mawk 的符号链接。
$ ll /usr/bin/awk  nawk： 在 20 世纪 80 年代中期，对 awk 语言进行了更新，并不同程度地使用一种称为 nawk(new awk) 的增强版本对其进行了替换。许多系统中仍然存在着旧的 awk 解释器，但通常将其安装为 oawk (old awk) 命令，而 nawk 解释器则安装为主要的 awk 命令，也可以使用 nawk 命令。Dr. Kernighan 仍然在对 nawk 进行维护，与 gawk 一样，它也是开放源代码的，并且可以免费获得; gawk： 是 GNU Project 的 awk 解释器的开放源代码实现。尽管早期的 GAWK 发行版是旧的 AWK 的替代程序，但不断地对其进行了更新，以包含 NAWK 的特性; mawk 也是 awk 编程语言的一种解释器，mawk 遵循 POSIX 1003.</description>
    </item>
    
    <item>
      <title>MAC SSH key generating</title>
      <link>http://example.org/posts/mac-ssh-key-generating/</link>
      <pubDate>Fri, 08 May 2020 09:41:15 +0000</pubDate>
      
      <guid>http://example.org/posts/mac-ssh-key-generating/</guid>
      <description>MAC SSH key generating Generating a new SSH key ssh-keygen -t rsa -C &amp;quot;your_email@example.com&amp;quot;
 -t = The type of the key to generate 密钥的类型 -C = comment to identify the key 用于识别这个密钥的注释 生成过程中可以自定义路径与名称,建议每次生成的名称都有自定义名字
 Adding your SSH key to the ssh-agent 如果您使用的是 macOS Sierra 10.12.2 或更高版本，则需要修改 ~/.ssh/config 文件以自动将密钥加载到 ssh-agent 中并在密钥链中存储密码。
Host * HostName Domian Port 22 User username AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa
ssh-add -K ~/.ssh/keyname Note: The -K option is Apple&amp;rsquo;s standard version of ssh-add, which stores the passphrase in your keychain for you when you add an ssh key to the ssh-agent.</description>
    </item>
    
    <item>
      <title>ssh和scp</title>
      <link>http://example.org/posts/ssh%E5%92%8Cscp/</link>
      <pubDate>Fri, 08 May 2020 09:15:49 +0000</pubDate>
      
      <guid>http://example.org/posts/ssh%E5%92%8Cscp/</guid>
      <description>ssh和scp ssh ssh介绍 SSH为Secure Shell的缩写，由 IETF 的网络工作小组（Network Working Group）所制定；SSH 为建立在应用层和传输层基础上的安全协议。
SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。常用于远程登录，以及用户之间进行资料拷贝。
利用SSH协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是 UNIX 系统上的一个程序，后来又迅速扩展到其他操作平台。SSH 在正确使用时可弥补网络中的漏洞。SSH 客户端适用于多种平台。几乎所有 UNIX 平台—包括 HP-UX、Linux、AIX、Solaris、Digital UNIX、Irix，以及其他平台，都可运行SSH。
使用SSH服务，需要安装相应的服务器和客户端。客户端和服务器的关系：如果，A机器想被B机器远程控制，那么，A机器需要安装SSH服务器，B机器需要安装SSH客户端。
安装ssh A.安装ssh服务器
sudo apt-get install openssh-server
B.远程登陆
ssh 用户名@IP 使用ssh访问，如访问出现错误。可查看是否有该文件 ～/.ssh/known_ssh 尝试删除该文件解决。
使用ssh连接服务器 被连接的机器： 主动连接的机器： SSH 告知用户，这个主机不能识别，这时键入&amp;quot;yes&amp;rdquo;，SSH 就会将相关信息，写入&amp;rdquo; ~/.ssh/know_hosts&amp;rdquo; 中，再次访问，就不会有这些信息了。然后输入完口令,就可以登录到主机了。
接着，提示输入登陆密码： 登陆成功: scp 远程拷贝文件,scp -r 的常用方法：
1.使用该命令的前提条件要求目标主机已经成功安装openssh-server
如没有安装使用 sudo apt-get install openssh-server 来安装
2.使用格式：
scp -r 目标用户名@目标主机IP地址：/目标文件的绝对路径 /保存到本机的绝对/相对路径
举例：
scp -r itcast@192.168.1.100:/home/itcast/QQ_dir/ ./mytest/lisi
在后续会提示输入“yes”此时，只能输“yes”而不能简单输入“Y” 拷贝单个文件可以不加 -r参数，拷贝目录必须要加。
本地文件复制到远程：
scp FileName RemoteUserName@RemoteHostIp:RemoteFile scp FileName RemoteHostIp:RemoteFolder scp FileName RemoteHostIp:RemoteFile 本地目录复制到远程：</description>
    </item>
    
    <item>
      <title>ftp</title>
      <link>http://example.org/posts/ftp/</link>
      <pubDate>Thu, 30 Apr 2020 07:19:01 +0000</pubDate>
      
      <guid>http://example.org/posts/ftp/</guid>
      <description>ftp FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。
用于Internet上的控制文件的双向传输。
同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。
在FTP的使用当中，用户经常遇到两个概念：&amp;ldquo;下载&amp;rdquo;（Download）和&amp;quot;上传&amp;rdquo;（Upload）。
&amp;ldquo;下载&amp;quot;文件就是从远程主机拷贝文件至自己的计算机上；
&amp;ldquo;上传&amp;quot;文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。
1.安装vsftpd服务器
sudo apt-get install vsftpd
2.配置vsftpd.conf文件
sudo vi /etc/vsftpd.conf
3.测试上传功能，登陆ftp服务器
ftp IP
4.上传命令，可以把文件上传到ftp服务器
put somefile
5.下载命令，可以把ftp服务器上的文件下载到本地
get somefile</description>
    </item>
    
    <item>
      <title>VIM</title>
      <link>http://example.org/posts/vim/</link>
      <pubDate>Thu, 30 Apr 2020 07:17:29 +0000</pubDate>
      
      <guid>http://example.org/posts/vim/</guid>
      <description>VIM 基础开始 vi (vim) 是 linux 系统下一个命令行文本编辑器，使用的时候直接 vi 后接文件名
vi test.txt ## 编辑 test.txt 文件，文件存在就编辑它，不存在就新建一个文件并编辑 vi 的最常用的两种模式： 普通模式 | 输入模式
 普通模式 是你打开文件时的样子
这个时候你可以直接使用本文章中提到的指令操作文本，此时你按键盘上的键会被编辑器接收，作为指令来执行，而不是输入到文本中。 如直接输入 :wq 来保存并退出文件。 :w 存储文本 :q 退出文本，如果你对文本做了改动，这个是退不出去的。需要下面： :q! 退出不保存文本 :wq 保存并退出文本
:set nu 显示行号 :set nonu 不显示行号
:syntax enable 语法高亮 （如果支持的话） :set filetype=html 文档格式，配合上面语句
 输入模式 按 指令 i 后会在光标位置开始输入，这时候左下角会有 --- INSERT --- 提示，表示当前正在输入模式。 此时你键盘的所有按键操作都会写入到文本中。 要切换到 普通模式 只需要按一下键盘的最左上角 esc 键即可。
 基础编辑，移动光标    指令 解释     $ 行尾   ^ 行首   gg or 0 光标移动文件开头   G 光标移动到文件末尾   w 下一个单词 (词首）   e 下一个单词（词尾）   b 前一个单词   x del 删除后一个字符   X backspace 删除前一个字符   u 撤销   ctrl + r 重做   k 上   j 下   h 左   l 右   i 插入，开始写东西   x 删除光标所在位置字符   i 在光标前插入字符   a 在光标后插入字符   s 修改光标处字符   r 替换当前字符   R 替换当前行光标后的字符   o 在下一行插入   esc 退出输入模式，进入普通模式，可执行各种命令     操作和重复操作    指令 解释     f 查找字符，按f后再按需要移动到的字符，光标就会移动到那.</description>
    </item>
    
    <item>
      <title>vim分屏操作</title>
      <link>http://example.org/posts/vim%E5%88%86%E5%B1%8F%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 30 Apr 2020 07:06:28 +0000</pubDate>
      
      <guid>http://example.org/posts/vim%E5%88%86%E5%B1%8F%E6%93%8D%E4%BD%9C/</guid>
      <description>vim分屏操作 分屏操作: sp: 上下分屏,后可跟文件名
vsp: 左右分屏,后可跟文件名
Ctr+w+w: 在多个窗口切换
启动分屏: 1.使用大写O参数进行垂直分屏
$ vim -On file1 file2 &amp;hellip;
2.使用小写o参数进行水平分屏
$ vim -on file1 file2 &amp;hellip;
注: n是数字，表示分屏的数量,n要大于等于文件个数
关闭分屏 1.关闭当前窗口
ctrl+w c
2.关闭当前窗口，如果只剩最后一个，则退出vim
ctrl+w q
编辑中分屏 1.上下分割当前打开的文件
ctrl+w s 2.上下分割，并打开一个新的文件
:sp filename 3.左右分割当前打开的文件
ctrl+w v 4.左右分割，并打开一个新的文件
:vsp filename
分屏编辑中光标的移动 vi中的光标键是h,j,k,l,要在各个屏之间切换，只需要先按一下ctrl+w
1.把光标移动到上边的屏
ctrl+w k 2.把光标移动到下边的屏
ctrl+w j 3.把光标移动到右边的屏
ctrl+w l 4.把光标移动到左边的屏
ctrl+w h 5.把光标移动到下一个的屏
ctrl+w w
移动分屏 1.向上移动
ctrl+w K 2.向下移动
ctrl+w J 3.向右移动</description>
    </item>
    
    <item>
      <title>apt-get</title>
      <link>http://example.org/posts/apt-get/</link>
      <pubDate>Tue, 28 Apr 2020 14:00:19 +0000</pubDate>
      
      <guid>http://example.org/posts/apt-get/</guid>
      <description>apt-get apt-get 是用于处理 apt包的公用程序集，我们可以用它来在线安装、卸载和升级软件包等，下面列出一些apt-get包含的常用的一些工具：
   工具 说明     install 其后加上软件包名，用于安装一个软件包   update 从软件源镜像服务器上下载/更新用于更新本地软件源的软件包列表   upgrade 升级本地可更新的全部软件包，但存在依赖问题时将不会升级，通常会在更新之前执行一次update   dist-upgrade 解决依赖关系并升级(存在一定危险性)   remove 移除已安装的软件包，包括与被移除软件包有依赖关系的软件包，但不包含软件包的配置文件   autoremove 移除之前被其他软件包依赖，但现在不再被使用的软件包   purge 与 remove 相同，但会完全移除软件包，包含其配置文件   clean 移除下载到本地的已经安装的软件包，默认保存在/var/cache/apt/archives/   autoclean 移除已安装的软件的旧版本软件包    下面是一些apt-get常用的参数：
   参数 说明     -y 自动回应是否安装软件包的选项，在一些自动化安装脚本中使用这个参数将十分有用   -s 模拟安装   -q 静默安装方式，指定多个q或者-q=#,#表示数字，用于设定静默级别，这在你不想要在安装软件包时屏幕输出过多时很有用   -f 修复损坏的依赖关系   -d 只下载不安装   --reinstall 重新安装已经安装但可能存在问题的软件包   --install-suggests 同时安装 APT 给出的建议安装的软件包    安装软件包 关于安装，如前面演示的一样你只需要执行apt-get install &amp;lt;软件包名&amp;gt;即可，除了这一点，你还应该掌握的是如何重新安装软件包。 很多时候我们需要重新安装一个软件包，比如你的系统被破坏，或者一些错误的配置导致软件无法正常工作。</description>
    </item>
    
  </channel>
</rss>