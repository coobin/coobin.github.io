<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCPIP on 梦还在吗</title>
    <link>http://example.org/tags/tcpip/</link>
    <description>Recent content in TCPIP on 梦还在吗</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 May 2020 11:09:55 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/tcpip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP/IP 寻址</title>
      <link>http://example.org/posts/ip-%E5%AF%BB%E5%9D%80/</link>
      <pubDate>Wed, 13 May 2020 11:09:55 +0000</pubDate>
      
      <guid>http://example.org/posts/ip-%E5%AF%BB%E5%9D%80/</guid>
      <description>TCP/IP 寻址 TCP/IP 使用 32 个比特或者 4 组 0 到 255 之间的数字来为计算机编址。
IP地址  每个计算机必须有一个 IP 地址才能够连入因特网。 每个 IP 包必须有一个地址才能够发送到另一台计算机。  IP 地址包含 4 组数字： TCP/IP 使用 4 组数字来为计算机编址。每个计算机必须有一个唯一的 4 组数字的地址。
每组数字必须在 0 到 255 之间，并由点号隔开，比如：192.168.1.60。
32 比特 = 4 字节 TCP/IP 使用 32 个比特来编址。一个计算机字节是 8 比特。所以 TCP/IP 使用了 4 个字节。
一个计算机字节可以包含 256 个不同的值：
00000000、00000001、00000010、00000011、00000100、00000101、00000110、00000111、00001000 &amp;hellip;&amp;hellip;. 直到 11111111。
现在，您应该知道了为什么 TCP/IP 地址是介于 0 到 255 之间的 4 组数字。
IP V6 IPv6 是 &amp;ldquo;Internet Protocol Version 6&amp;rdquo; 的缩写，也被称作下一代互联网协议，它是由 IETF 小组（Internet 工程任务组Internet Engineering Task Force）设计的用来替代现行的 IPv4（现行的）协议的一种新的 IP 协议。</description>
    </item>
    
    <item>
      <title>网络基础</title>
      <link>http://example.org/posts/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 28 Apr 2020 13:58:15 +0000</pubDate>
      
      <guid>http://example.org/posts/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description>网络基础 什么是TCP/IP  TCP/IP 是供已连接因特网的计算机进行通信的通信协议 TCP/IP 指传输控制协议/网际协议（Transmission Control Protocol / Internet Protocol） TCP/IP 定义了电子设备（比如计算机）如何连入因特网，以及数据如何在它们之间传输的标准。  在TCP/IP内部 在TCP/IP中包含一系列用于处理数据通信的协议：
 TCP（传输控制协议） - 应用程序之间的通信 UDP（用户数据包协议） - 应用程序之间的简单通信 IP（网际协议） - 计算机之间的通信 ICMP（因特网消息控制协议） - 针对错误和状态 DHCP（动态主机配置协议） - 针对动态寻址  IP是无连接的  IP用于计算机之间的通信 IP是无连接的通信协议。它不会占用两个正在通信的计算机之间的通信线路。这样，IP就降低了对网络线路的需求。每条线可以同时满足许多不同的计算机之间的通信需要。 通过IP，消息（或其他数据）被分割为小的独立的包，并通过因特网在计算机之间的传送。 IP负责将每个包路由至它的目的地。  IP路由器  当一个IP包从一台计算机被发送，它会到达一个IP路由器 IP路由器负责将这个包路由至它的目的地，直接的或者通过其他的路由器。 在一个相同的通信中，一个包所经由的路径可能会和其他的包不同。而路由器负责根据通信量、网络中的错误或者其他参数来进行正确地寻址。  TCP/IP  TCP/IP意味着TCP和IP在一起协同工作。 TCP负责应用软件和网络软件之间的通信。 IP负责计算机之间的通信。 TCP负责将数据分割并装入IP包，然后在它们到达的时候重新组合它们。 IP负责将包发送至接受者。  网络类型 协议  决定数据的格式和传输的一组规则  网络的性能指标  带宽(Bandwidth) 描述在单位时间内传输的数据量 以bps(bit per second,比特每秒)为单位 延迟(delay) 描述数据传输所经历的时间 以ms(毫秒)为单位  分层模型 封装和解封:encapsulate &amp;amp; de-encapsulate   数据发送,需要逐层向下传递数据,并添加相关头部或尾部的过程称为封装(打包)</description>
    </item>
    
    <item>
      <title>Ethernet</title>
      <link>http://example.org/posts/ethernet/</link>
      <pubDate>Fri, 17 Apr 2020 19:26:21 +0000</pubDate>
      
      <guid>http://example.org/posts/ethernet/</guid>
      <description>Ethernet 以太网的发展 以太网的标准 数据链路层的分层设计  LLC  Logical Link Control,逻辑链路控制 负责识别网络层的协议类型,接收上层数据包封装成帧后,向下层传递   MAC  Media Access Control,介质访问控制 负责控制与连接物理层的物理介质 处理硬件设备的物理寻址、定义网络拓扑及数据帧的传递顺序    以太网的帧结构 术语  协议类型:所有上层的协议,如:0x0800代表IPv4 数据:所有上层协议数据 MTU:最大传输单元,默认1500字节,每次发送的数据的最大值 帧校验:通过一定的计算公式对数据包进行计算得出的值 MAC地址:48bit,十六进制表示,代表以太网接口的物理地址,全球唯一  MAC地址 数据帧传输 </description>
    </item>
    
    <item>
      <title>VLSM &amp; CIDR</title>
      <link>http://example.org/posts/vlsm-cidr/</link>
      <pubDate>Fri, 17 Apr 2020 19:26:14 +0000</pubDate>
      
      <guid>http://example.org/posts/vlsm-cidr/</guid>
      <description>VLSM &amp;amp; CIDR </description>
    </item>
    
    <item>
      <title>TCP/IP Protocols</title>
      <link>http://example.org/posts/ip-protocols/</link>
      <pubDate>Fri, 17 Apr 2020 19:25:53 +0000</pubDate>
      
      <guid>http://example.org/posts/ip-protocols/</guid>
      <description>TCP/IP Protocols TCP/IP 是不同的通信协议的大集合。
协议族 TCP/IP 是基于 TCP 和 IP 这两个最初的协议之上的不同的通信协议的大集合。
TCP - 传输控制协议 TCP 用于从应用程序到网络的数据传输控制。
TCP 负责在数据传送之前将它们分割为 IP 包，然后在它们到达的时候将它们重组。
IP - 网际协议（Internet Protocol） IP 负责计算机之间的通信。
IP 负责在因特网上发送和接收数据包。
HTTP - 超文本传输协议(Hyper Text Transfer Protocol) HTTP 负责 web 服务器与 web 浏览器之间的通信。
HTTP 用于从 web 客户端（浏览器）向 web 服务器发送请求，并从 web 服务器向 web 客户端返回内容（网页）。
HTTPS - 安全的 HTTP（Secure HTTP） HTTPS 负责在 web 服务器和 web 浏览器之间的安全通信。
作为有代表性的应用，HTTPS 会用于处理信用卡交易和其他的敏感数据。
SSL - 安全套接字层（Secure Sockets Layer） SSL 协议用于为安全数据传输加密数据。</description>
    </item>
    
    <item>
      <title>IP Address</title>
      <link>http://example.org/posts/ip-address/</link>
      <pubDate>Fri, 17 Apr 2020 19:25:41 +0000</pubDate>
      
      <guid>http://example.org/posts/ip-address/</guid>
      <description>IP Address 进制转换  有n个1就有多少2的n次幂个子网 有n个0就有多少2的n次幂个主机   求快=求块（block）=2^n 主机数位=256-感兴趣掩码数   192.168.1.0 /27 主机数为2的5次方32个
  192.168.1.0 255.255.255.224 主机数为256-224=32
 IP结构  由32位二进制组成，用点分十进制表示 结构上分为网络位和主机位两部分：  网络位，代表IP地址所属的网断 主机位，代表网段上的某个节点 由子网掩码决定分界点     子网掩码及前缀：Subnet Mask &amp;amp; Prefiex  用于区分网络位和主机位 1表示网络位，0表示主机位（连续的1和0） 前缀表示法（/数字），用来代表多少位网络位（1）  网络地址、主机地址、广播地址    地址类型 备注     网络地址 主机位全为0，代表一个网段（头）   主机地址 主机位不全为0也不全为1，代表一个网段内的一个节点（身体）   广播地址 主机位全为1，代表一个网段内的所有节点（尾）     IP地址201.161.20.18/24的网络地址是201.161.20.0，主机地址是0.0.0.18，直接广播地址为201.161.20.255。
 分类网络    Class 前缀位	网络地址位数 剩余的位数 网络数 每个网络的主机数     A类地址 0 8 24 128   B类地址 10 16 16 16,384	65,534   C类地址 110 24 8 2,097,152   D类地址（群播） 1110 未定义 未定义 未定义   E类地址（保留） 1111 未定义 未定义 未定义    各个类别的范围    分类 前缀码 开始地址 结束地址 对应CIDR修饰 默认子网掩码     A类地址 0 0.</description>
    </item>
    
    <item>
      <title>TCP/IP</title>
      <link>http://example.org/posts/ip/</link>
      <pubDate>Mon, 13 Apr 2020 13:37:30 +0000</pubDate>
      
      <guid>http://example.org/posts/ip/</guid>
      <description>TCP/IP 传输层 传输层概述  传输层提供端到端的连接 网络层提供点到点的连接  传输层端口:Port 传输层协议 TCP  Transmission Control Protocol,传输控制协议 可靠的、面向连接的协议 传输效率低、类似打电话  UDP  User Datagram Protocol,用户数据报协议 不可靠的、无连接的服务 传输效率高,类似群聊  TCP和UDP数据包结构对比 TCP会话的建立:三次握手 seq:序列号 SYN:同步位 ACK:确认位 win:窗口位 FIN:终止位
TCP会话的确认和重传 通过序列号加字节来确认 TCP会话的拥塞和流量控制 TCP会话的终止:四次挥手 UDP传输过程 TCP和UDP的对比    传输控制协议(TCP) 用户数据报协议(UDP)     面向连接 无连接   可靠传输 尽力而为的传输   支持流控及窗口控制机制 无流控及窗口机制   HTTP、TFP等 TFTP、DNS、DHCP等    Others 那 TCP/IP 是如何运作的呢？我们就拿妳常常连上的 Yahoo 入口网站来做个说明好了，整个联机的状态可以这样看： 0 应用程序阶段：妳打开浏览器，在浏览器上面输入网址列，按下 [Enter]。此时网址列与相关数据会被浏览器包成一个数据， 并向下传给 TCP/IP 的应用层；</description>
    </item>
    
  </channel>
</rss>